pipeline{
    agent any

    tools { 
        maven 'Maven3.6.2' 
        jdk 'jdk8' 
    }
    stages {
        stage('checkout') {
            steps {
                deleteDir() 
                checkout scm
                script{
                    withCredentials([string(credentialsId: 'token', variable: 'TOKEN')]) { 
                        sh "git fetch http://jenkins:$TOKEN@35.176.222.34/maciejgroszyk/testing --tags"
                    }
                }
            }
        }
        
        stage('build & unit tests'){
            when {
                anyOf {
                    branch "master"
                }
            }
            steps {
                configFileProvider([configFile(fileId: '27d6ad7c-09ef-458b-9737-b65bd2387547', variable: 'MAVEN_SETTINGS_XML')]) {
                    sh "mvn -s $MAVEN_SETTINGS_XML clean package"
                }
            }
        }

        stage('e2e tests'){
            when {
                anyOf {
                    branch "master"
                } 
            }
            steps {
                script{
                    withCredentials([usernamePassword(credentialsId: 'jfrog', passwordVariable: 'pass', usernameVariable: 'user')]) {
                        sh 'wget -r -np -nH --cut-dirs 4 --user=$user --password=$pass http://35.176.222.34:8082/artifactory/libs-snapshot-local/com/lidar/analytics/99-SNAPSHOT/'
                        sh 'wget -r -np -nH --cut-dirs 4 --user=$user --password=$pass http://35.176.222.34:8082/artifactory/libs-snapshot-local/com/lidar/telemetry/99-SNAPSHOT/'
                    }
                    NEWEST_TELEMETRY_SNAPSHOT= sh(returnStdout: true, script: 'ls -t telemetry/99-SNAPSHOT/telemetry-99*.jar | head -1').trim()
                    NEWEST_ANALYTIC_SNAPSHOT= sh(returnStdout: true, script: 'ls -t analytics/99-SNAPSHOT/analytics-99*.jar | head -1').trim()

                    sh "cp ${NEWEST_ANALYTIC_SNAPSHOT} analytics.jar"
                    sh "cp ${NEWEST_TELEMETRY_SNAPSHOT} simulator.jar"
                    sh "cp target/simulator-*.jar telemetry.jar"
                    sh "java -cp simulator.jar:telemetry.jar:analytics.jar com.lidar.simulation.Simulator"
                }
            }
        }
        stage('publish'){
            when {
                anyOf{
                    branch "master"
                }
            }
            steps {
                configFileProvider([configFile(fileId: '27d6ad7c-09ef-458b-9737-b65bd2387547', variable: 'MAVEN_SETTINGS_XML')]) {
                    sh "mvn -s $MAVEN_SETTINGS_XML clean deploy -DskipTests"
                }
            }
        }
    }
}